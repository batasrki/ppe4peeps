// Code generated by github.com/actgardner/gogen-avro/v7. DO NOT EDIT.
/*
 * SOURCE:
 *     order_received.avsc
 */
package avro

import (
	"github.com/actgardner/gogen-avro/v7/compiler"
	"github.com/actgardner/gogen-avro/v7/vm"
	"github.com/actgardner/gogen-avro/v7/vm/types"
	"io"
)

type Metadatum struct {
	// A unique ID representing the event itself.
	Id int64 `json:"id"`
	// A Unix timestamp of the event.
	Timestamp int64 `json:"timestamp"`
}

const MetadatumAvroCRC64Fingerprint = "3\xe0ß¿\x85T\xa61"

func NewMetadatum() *Metadatum {
	return &Metadatum{}
}

func DeserializeMetadatum(r io.Reader) (*Metadatum, error) {
	t := NewMetadatum()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err
	}
	return t, err
}

func DeserializeMetadatumFromSchema(r io.Reader, schema string) (*Metadatum, error) {
	t := NewMetadatum()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err
	}
	return t, err
}

func writeMetadatum(r *Metadatum, w io.Writer) error {
	var err error
	err = vm.WriteLong(r.Id, w)
	if err != nil {
		return err
	}
	err = vm.WriteLong(r.Timestamp, w)
	if err != nil {
		return err
	}
	return err
}

func (r *Metadatum) Serialize(w io.Writer) error {
	return writeMetadatum(r, w)
}

func (r *Metadatum) Schema() string {
	return "{\"fields\":[{\"doc\":\"A unique ID representing the event itself.\",\"name\":\"id\",\"type\":\"long\"},{\"doc\":\"A Unix timestamp of the event.\",\"name\":\"timestamp\",\"type\":\"long\"}],\"name\":\"metadatum\",\"type\":\"record\"}"
}

func (r *Metadatum) SchemaName() string {
	return "metadatum"
}

func (_ *Metadatum) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ *Metadatum) SetInt(v int32)       { panic("Unsupported operation") }
func (_ *Metadatum) SetLong(v int64)      { panic("Unsupported operation") }
func (_ *Metadatum) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ *Metadatum) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ *Metadatum) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ *Metadatum) SetString(v string)   { panic("Unsupported operation") }
func (_ *Metadatum) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *Metadatum) Get(i int) types.Field {
	switch i {
	case 0:
		return &types.Long{Target: &r.Id}
	case 1:
		return &types.Long{Target: &r.Timestamp}
	}
	panic("Unknown field index")
}

func (r *Metadatum) SetDefault(i int) {
	switch i {
	}
	panic("Unknown field index")
}

func (r *Metadatum) NullField(i int) {
	switch i {
	}
	panic("Not a nullable field index")
}

func (_ *Metadatum) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *Metadatum) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ *Metadatum) Finalize()                        {}

func (_ *Metadatum) AvroCRC64Fingerprint() []byte {
	return []byte(MetadatumAvroCRC64Fingerprint)
}
